General
    Move MyCustomWidget et Config to separate projects, and import them in gallery
        => reuse them in other projects.
    Update cookie cutter template
    



Sphinx:
    clean config
    clean code modify_toc
    clean code create_pyside2_aliases / create_peewee_aliases (in Perso/Code/Python)
    move all additional functions to additional files and call them from conf
    clean code in additional files
    add support for type aliases
        (check https://github.com/sphinx-doc/sphinx/pull/8007/files)
    add support for transforming MyClass into :class:path.to.myclass
    move modif from sphinx.ext.napoleon.docstring to external file and monkeypatch
            - in _format_field
            - in _load_custom_sections
        => keep the modif when updating sphinx
        + treat any unknown section as custom section
    create tool to allow for toc_modification and keep them when rewriting TOC in automatic
        -members to exclude
    edit html
        - to remove unwanted information (fully qualified type hint)
        - remove fields from default value after peewee.
            Example : in models.tags.Tag
                id: int = <AutoField: Tag.id>   =>    id: int
    correct formatting of type hint in Class attributes. Ex
        Example : in models.tags. ObjectTag
            my_object: Type[peewee.Model]   =>   my_object: Type[Model] (avec des jolis liens :) )


    
Nice to have for next version(s) :
    v2
        Add elements to the tag tree allowing to filter by attributes of my_object
        Create a parameter with a list of attributes to add to the tag tree for filters
        Sort by my_object attribute (+ buttons to select an ordering)
        When refresh tab, keep selection where possible (= keep in selection the id
            of objects still present after the refresh)
        Remember tabs from last session
        Select all with CRTL + A
        Add selecting range of cells by using SHIFT (need cell index ?)
        Display the number of elements selected
        Icons for different type of tags
        Popup with name and tag info (and rating)
        Tag position in the tree
        Move tag by drag and drop
        When renaming view from tag tree, update tab name as well

    v3
        Link between tags
        Buttons to change between cell sizes
        Create_table at init time if not existing
        Create a way to choose intervalls for numerical values of specific attributes (duration)
        Package as a wheel for pip installation
        Grid view with attributes columns (similar to an Excel sheet)
        Create hook to add tag function
        System to dynamically modify the query
        Create a cli for managing the database
        Search (object name and tag)
        Thumbnails of different sizes to adapt to cell size + function to select the "right" size
